"DATABASE ACCESS"   #




"CONNECTOR"     # прави връзката с базата данни
from mariadb.connections import Connection

def _get_connection() -> Connection:
    return connect(
        user="root",
        password="root",
        host="localhost",
        port=3306,
        database="data_access_demo_db") # името на схемата


"CURSOR"
"""
С тези методи могат да се изпълняват SQL заявки и да се работи
с резултатите от тях. SQL заявките се  записват като стрингове, 
които се подават като аргументи на метода execute() или други 
подобни методи.

execute(sql_query): 
    използва се за изпълнение на SQL заявки, 
    като SELECT, INSERT, UPDATE, DELETE и други. Заявката се подава 
    като аргумент на метода и се изпълнява върху базата данни.

fetchone(): 
    използва се след изпълнение на SELECT заявка и връща следващия 
    резултатен ред като tuple.

fetchall(): 
    събира всички резултатни редове от последно изпълнената SELECT 
    заявка и ги връща като списък от кортежи.

fetchmany(size): 
    връща указан брой резултатни редове (като tuple) от последно 
    изпълнената SELECT заявка. Размерът на върнатите редове се задава 
    чрез аргумента "size".

executemany(): 
    използва се за масово вмъкване на данни чрез изпълнение на 
    множество INSERT или UPDATE заявки веднъж.



"SQL INJECTION "
вид атака, които използват SQL заявки за достъп до бази данни. 
Позволява внедрят зловреден SQL код във входни данни, 
с цел манипулиране на базата данни или извличане на информация.

Възможни са, когато входните данни не се проверяват и валидират



"ТРАНЗАКЦИЯ"
В рамките на една транзакция се извършват няколко взаимозависими заявки.
Транзакцията е успешна, когато всички заявки са успешни. Дори при една 
неуспешна заявка, всичките стават невалидни.

"COMMIT"
Използва се когато правим промени в БД. Ако заявката/ транзакциите 
са успешни commit минава и запазва състоянието на БД.

"""